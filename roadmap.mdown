
Duality arises from Unity, -- But do not be attached to this Unity

---------------------------------------------------------------------------------------------------

BEFORE PUBLISH:

    - point ck_test to "test/res/ck" and make CLI args optional (process all input in that folder)
    - write more test (+ code coverage tool ?), + provide videos and sgf ressources
    - readme
    - try the VidRecorder again (as of v2.4.8)
    - make vision values as dynamic as possible (frame size, ...)
    - remove calibration prompt !!
    - replace controller.pipe() with regular methods ??

    - move as much dev code as possible out of the way (have a general look)
    - cleanup todos / commented code / asserts (?)
    - document code, especially fields
    - create a setup to install Golib in the default "site-packages" location (or redirect from CK !)
    - license
    - clean up and mark down this file :)

---------------------------------------------------------------------------------------------------

ON PUBLISH:

    - links to openCV install
    - links to PyCharm CE  -- may be able to ask for a free license !
    - jetbrains has a banner generator. can we set one on github ?
    - set issue tracker
    - convert this file into milestones
    - add myself to:
            http://stackoverflow.com/q/5742140/777285  (+ crawl from there)
            kgs and igs profiles
    - hammer keywords online (go, weiqi, baduk, igo, camera, recording, video) to be found

---------------------------------------------------------------------------------------------------

CODE ROADMAP FOR COMMUNITY :

PYTHON
    - channel all printing to a decent log
    - create a log viewer pane in the gui
    - save user preferences: {sgf save dir, ...}.
    - extract vision (+ time periods) parameters to file for easier tuning (maybe via GUI)
    - try and see if some references could not be weakened  (http://docs.python.org/2/library/weakref.html)

GUI
    - add undo command (e.g. moving or deleting a stone)
    - add game-related informations (player names, number of captured, time, ... )
    - warn when correcting a stone further from its location (e.g. reddening background or circle around stone)
    - display "ghost" stones, e.g. for intermediate positions when dragging. or on mouse hover.
    - auto resize of goban and stones according to window size.

    - API allowing the display of status lights (to be used by vision).
    - API allowing to mark stones with colors (to be used by vision).
    --> implement above by extending the GUI from Camkifu in some clever way.

GO
    - implement variation support (proper use of GameTree)
    - implement / connect score estimation

CV
    - allow initial game setup auto detection, like handicap stones
    - provide vidprocessors with their last successful run (interruption awareness)
    - save a video sample for each game, can be seen as a backup. provide option to disable it (disk space)
    - update background periodically
    - when board detected at a new location, invalidate all moves found since previous detection (stones buffer)
    - bg-sub: update B/W thresholds dynamically (per zone ?). Increase on detect, lower on user stone add.
    - ability to provide image file as input (for testing)
    - ability to naviguate movie file, based on already detected moves. Eg test has passed but for a few elems, provide a way to jump before them yet as close as possible.

---------------------------------------------------------------------------------------------------

